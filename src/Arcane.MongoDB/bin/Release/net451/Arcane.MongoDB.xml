<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Arcane.MongoDB</name>
    </assembly>
    <members>
        <member name="T:Arcane.MongoDB.MongoDbQuery`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Arcane.MongoDB.MongoDbQuery`1.#ctor(MongoDB.Driver.IMongoCollection{`0},Arcane.IQueryContext)">
            <summary>
            
            </summary>
            <param name="collection"></param>
            <param name="context"></param>
        </member>
        <member name="M:Arcane.MongoDB.MongoDbQuery`1.AddCore(`0)">
            <summary>
            When implemented in a derived class, adds a new <typeparamref name="T"/> entity to the backing database or collection.
            </summary>
            <param name="entity">The entity to add.</param>
        </member>
        <member name="M:Arcane.MongoDB.MongoDbQuery`1.AddCore(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            When implemented in a derived class, adds all the new <typeparamref name="T"/> entities to the backing database or collection.
            </summary>
            <param name="entities">The entities to add.</param>
        </member>
        <member name="M:Arcane.MongoDB.MongoDbQuery`1.DeleteCore(`0)">
            <summary>
            When implemented in a derived class, deletes the <typeparamref name="T"/> entity from the backing database or collection.
            </summary>
            <param name="entity">The entity to delete.</param>
        </member>
        <member name="M:Arcane.MongoDB.MongoDbQuery`1.DeleteCore(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            When implemented in a derived class, deletes all the <typeparamref name="T"/> entities from the backing database or collection.
            </summary>
            <param name="entities">The entities to delete.</param>
        </member>
        <member name="M:Arcane.MongoDB.MongoDbQuery`1.UpdateCore(`0)">
            <summary>
            When implemented in a derived class, updates the <typeparamref name="T"/> entity in the backing database or collection.
            </summary>
            <param name="entity">The entity to update.</param>
        </member>
        <member name="M:Arcane.MongoDB.MongoDbQuery`1.UpdateCore(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            When implemented in a derived class, updates all the <typeparamref name="T"/> entities in the backing database or collection.
            </summary>
            <param name="entities">The entities to update.</param>
        </member>
        <member name="T:Arcane.MongoDB.MongoDbQueryContext">
            <summary>
            
            </summary>
        </member>
        <member name="M:Arcane.MongoDB.MongoDbQueryContext.#ctor(MongoDB.Driver.IMongoDatabase)">
            <summary>
            
            </summary>
            <param name="database"></param>
        </member>
        <member name="M:Arcane.MongoDB.MongoDbQueryContext.Query``1(System.String)">
            <summary>
            When implemented in a derived class, creates a query for the given <typeparamref name="T"/> model representing a table or collection.
            </summary>
            <typeparam name="T">The type representing the table or collection.</typeparam>
            <param name="name">Optional, parameter is only used in some implementations of the <see cref="T:Arcane.IQueryContext"/></param>
            <returns></returns>
        </member>
        <member name="M:Arcane.MongoDB.MongoDbQueryContext.EvaluateExpression(System.Linq.Expressions.Expression)">
            <summary>
            When implemented in a derived class will evaluate the <paramref name="expression"/> if <see cref="P:Arcane.QueryContext.SuppressCompatabilityErrors"/> is false.
            </summary>
            <param name="expression"></param>
        </member>
    </members>
</doc>
